{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to DBLMAPIV2 Documentation DBLMAPIV2 is a Python module designed for modding Dragon Ball Legends Game files. It provides various functions to manipulate file content, and its modular structure allows for easy integration and extensibility. Table of Contents Functions Installation Credits Future Plans/Checklist Getting Started To get started with DBLMAPIV2, please refer to the installation instructions . Once installed, explore the available functions to understand how to use the module in your projects. Contributions We welcome contributions from the community. If you have ideas for improvements, bug reports, or want to contribute to the development, please check out the GitHub repository . Feel free to explore the documentation to learn more about the capabilities of DBLMAPIV2!","title":"Home"},{"location":"#welcome-to-dblmapiv2-documentation","text":"DBLMAPIV2 is a Python module designed for modding Dragon Ball Legends Game files. It provides various functions to manipulate file content, and its modular structure allows for easy integration and extensibility.","title":"Welcome to DBLMAPIV2 Documentation"},{"location":"#table-of-contents","text":"Functions Installation Credits Future Plans/Checklist","title":"Table of Contents"},{"location":"#getting-started","text":"To get started with DBLMAPIV2, please refer to the installation instructions . Once installed, explore the available functions to understand how to use the module in your projects.","title":"Getting Started"},{"location":"#contributions","text":"We welcome contributions from the community. If you have ideas for improvements, bug reports, or want to contribute to the development, please check out the GitHub repository . Feel free to explore the documentation to learn more about the capabilities of DBLMAPIV2!","title":"Contributions"},{"location":"credits/","text":"Credits DBLMAPIV2 is developed and maintained by Mindset. Contributions: - Mindset - Ducks - Darklaser38","title":"Credits"},{"location":"credits/#credits","text":"DBLMAPIV2 is developed and maintained by Mindset. Contributions: - Mindset - Ducks - Darklaser38","title":"Credits"},{"location":"future_plans/","text":"Future Plans/Checklist Here are some planned features and future developments for DBLMAPIV2: [ ] Discord Integration [ ] Advanced Documentation [ ] Performance Optimization [ ] Additional Functionality We appreciate your feedback and contributions to help us achieve these goals!","title":"Future Plans/Checklist"},{"location":"future_plans/#future-planschecklist","text":"Here are some planned features and future developments for DBLMAPIV2: [ ] Discord Integration [ ] Advanced Documentation [ ] Performance Optimization [ ] Additional Functionality We appreciate your feedback and contributions to help us achieve these goals!","title":"Future Plans/Checklist"},{"location":"installation/","text":"Installation To use DBLMAPIV2 in your Python project, follow these steps: Step 1: Install DBLMAPIV2 You can install DBLMAPIV2 using pip . Open your terminal or command prompt and run the following command: pip install dblmapiv2 This command will download and install the latest version of DBLMAPIV2 from the Python Package Index (PyPI). Step 2: Import and Use Once installed, you can import and use DBLMAPIV2 in your Python code. Here's an example: # Example usage in your Python code from dblmapi.ext.functions import process_sleeve # full examples in functions tab Now, you're ready to integrate DBLMAPIV2 into your project! For more detailed information about the available functions and their usage, refer to the Functions section in the documentation.","title":"Installation"},{"location":"installation/#installation","text":"To use DBLMAPIV2 in your Python project, follow these steps:","title":"Installation"},{"location":"installation/#step-1-install-dblmapiv2","text":"You can install DBLMAPIV2 using pip . Open your terminal or command prompt and run the following command: pip install dblmapiv2 This command will download and install the latest version of DBLMAPIV2 from the Python Package Index (PyPI).","title":"Step 1: Install DBLMAPIV2"},{"location":"installation/#step-2-import-and-use","text":"Once installed, you can import and use DBLMAPIV2 in your Python code. Here's an example: # Example usage in your Python code from dblmapi.ext.functions import process_sleeve # full examples in functions tab Now, you're ready to integrate DBLMAPIV2 into your project! For more detailed information about the available functions and their usage, refer to the Functions section in the documentation.","title":"Step 2: Import and Use"},{"location":"ext/functions/","text":"Functions process_sleeve(file_content, new_sleeve) This function processes the file content to update the selected sleeve ID. Parameters: file_content : Bytes, the content of the file to be processed. new_sleeve : Integer, the new sleeve ID to be set. Example: from dblmapi.ext.functions import process_sleeve # Example file name file_name = \"89bb4eb5637df3cd96c463a795005065\" # Read the file content with open(f\"{file_name}\", \"rb\") as file: file_content = file.read() new_sleeve = 42 # Process the sleeve ID processed_content = process_sleeve(file_content, new_sleeve) process_clone(content, team_id, character_id) This function processes the file content to update the character IDs in a specified team. Parameters: content : Bytes, the content of the file to be processed. team_id : Integer, the ID of the team to be updated. character_id : Integer, the new character ID to be set. Example: from dblmapi.ext.functions import process_clone # Example file name file_name = \"89bb4eb5637df3cd96c463a795005065\" # Read the file content with open(f\"{file_name}\", \"rb\") as file: file_content = file.read() team_id = 1 character_id = 123 # Process the character IDs in the specified team processed_content = process_clone(file_content, team_id, character_id) process_all_replacements(content) This function performs various replacements in the file content based on specific conditions. Parameters: content : Bytes, the content of the file to be processed. Example: from dblmapi.ext.functions import process_all_replacements # Example file name file_name = \"89bb4eb5637df3cd96c463a795005065\" # Read the file content with open(f\"{file_name}\", \"rb\") as file: file_content = file.read() # Perform various replacements processed_content = process_all_replacements(file_content) process_combined_replacements(content) This function combines different replacement processes in the file content. Parameters: content : Bytes, the content of the file to be processed. Example: from dblmapi.ext.functions import process_combined_replacements # Example file name file_name = \"89bb4eb5637df3cd96c463a795005065\" # Read the file content with open(f\"{file_name}\", \"rb\") as file: file_content = file.read() # Combine different replacement processes processed_content = process_combined_replacements(file_content)","title":"Functions"},{"location":"ext/functions/#functions","text":"","title":"Functions"},{"location":"ext/functions/#process_sleevefile_content-new_sleeve","text":"This function processes the file content to update the selected sleeve ID.","title":"process_sleeve(file_content, new_sleeve)"},{"location":"ext/functions/#parameters","text":"file_content : Bytes, the content of the file to be processed. new_sleeve : Integer, the new sleeve ID to be set.","title":"Parameters:"},{"location":"ext/functions/#example","text":"from dblmapi.ext.functions import process_sleeve # Example file name file_name = \"89bb4eb5637df3cd96c463a795005065\" # Read the file content with open(f\"{file_name}\", \"rb\") as file: file_content = file.read() new_sleeve = 42 # Process the sleeve ID processed_content = process_sleeve(file_content, new_sleeve)","title":"Example:"},{"location":"ext/functions/#process_clonecontent-team_id-character_id","text":"This function processes the file content to update the character IDs in a specified team.","title":"process_clone(content, team_id, character_id)"},{"location":"ext/functions/#parameters_1","text":"content : Bytes, the content of the file to be processed. team_id : Integer, the ID of the team to be updated. character_id : Integer, the new character ID to be set.","title":"Parameters:"},{"location":"ext/functions/#example_1","text":"from dblmapi.ext.functions import process_clone # Example file name file_name = \"89bb4eb5637df3cd96c463a795005065\" # Read the file content with open(f\"{file_name}\", \"rb\") as file: file_content = file.read() team_id = 1 character_id = 123 # Process the character IDs in the specified team processed_content = process_clone(file_content, team_id, character_id)","title":"Example:"},{"location":"ext/functions/#process_all_replacementscontent","text":"This function performs various replacements in the file content based on specific conditions.","title":"process_all_replacements(content)"},{"location":"ext/functions/#parameters_2","text":"content : Bytes, the content of the file to be processed.","title":"Parameters:"},{"location":"ext/functions/#example_2","text":"from dblmapi.ext.functions import process_all_replacements # Example file name file_name = \"89bb4eb5637df3cd96c463a795005065\" # Read the file content with open(f\"{file_name}\", \"rb\") as file: file_content = file.read() # Perform various replacements processed_content = process_all_replacements(file_content)","title":"Example:"},{"location":"ext/functions/#process_combined_replacementscontent","text":"This function combines different replacement processes in the file content.","title":"process_combined_replacements(content)"},{"location":"ext/functions/#parameters_3","text":"content : Bytes, the content of the file to be processed.","title":"Parameters:"},{"location":"ext/functions/#example_3","text":"from dblmapi.ext.functions import process_combined_replacements # Example file name file_name = \"89bb4eb5637df3cd96c463a795005065\" # Read the file content with open(f\"{file_name}\", \"rb\") as file: file_content = file.read() # Combine different replacement processes processed_content = process_combined_replacements(file_content)","title":"Example:"}]}